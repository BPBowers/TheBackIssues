generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model ComicBook {
  id          Int         @id @default(autoincrement())
  issue       Int?
  frontCover  Bytes?
  backCover   Bytes?
  coverPrice  Decimal?
  releaseDate DateTime?
  seriesID    Int
  Series      Series      @relation(fields: [seriesID], references: [id], onDelete: NoAction, onUpdate: NoAction)
  UserOwns    UserOwns[]
  UserWants   UserWants[]
}

model Series {
  id        Int         @id @default(autoincrement())
  title     String?
  publishId Int?
  ComicBook ComicBook[]
  Publisher Publisher?  @relation(fields: [publishId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Users {
  id           Int         @id @default(autoincrement())
  username     String      @unique(map: "sqlite_autoindex_Users_1")
  passwordHash String
  createdAt    DateTime?   @default(now())
  UserOwns     UserOwns[]
  UserWants    UserWants[]
}

model Publisher {
  id      Int       @id @default(autoincrement())
  name    String?
  founded DateTime?
  Series  Series[]
}

model UserOwns {
  userId      Int
  comicBookId Int
  quantity    Int?      @default(1)
  ComicBook   ComicBook @relation(fields: [comicBookId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Users       Users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([userId, comicBookId])
}

model UserWants {
  userId      Int
  comicBookId Int
  ComicBook   ComicBook @relation(fields: [comicBookId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Users       Users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([userId, comicBookId])
}
